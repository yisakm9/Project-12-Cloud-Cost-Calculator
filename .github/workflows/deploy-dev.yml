# .github/workflows/terraform-deploy.yml

name: 'Terraform & Frontend CI/CD for Cloud Cost Calculator'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'dev/**'
      - 'frontend/public/**'
  pull_request:
    paths:
      - 'dev/**'
      - 'frontend/public/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: 'dev'
      AWS_REGION: 'us-east-1'
      AWS_ROLE_ARN: arn:aws:iam::456202167790:role/githubaction

    outputs:
      bucket_name: ${{ steps.set-tf-outputs.outputs.bucket_name }}
      api_url: ${{ steps.set-tf-outputs.outputs.api_url }}

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.1'

      - name: 'Terraform Init'
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 'Terraform Validate'
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 'Set Terraform Outputs'
        id: set-tf-outputs
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          bucket_name=$(terraform output -raw s3_bucket_name)
          api_url=$(terraform output -raw api_endpoint_url)
          echo "bucket_name=$bucket_name" >> $GITHUB_OUTPUT
          echo "api_url=$api_url" >> $GITHUB_OUTPUT
        working-directory: ${{ env.TF_WORKING_DIR }}

  deploy-frontend:
    name: 'Deploy Frontend to S3'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    env:
      S3_BUCKET_NAME: ${{ needs.terraform.outputs.bucket_name }}
      API_ENDPOINT: ${{ needs.terraform.outputs.api_url }}
      AWS_REGION: 'us-east-1'
      AWS_ROLE_ARN: arn:aws:iam::456202167790:role/githubaction

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: 'Inject API Endpoint URL into JavaScript'
        run: |
          echo "API Endpoint from Terraform job: ${{ env.API_ENDPOINT }}"
          if [ -z "${{ env.API_ENDPOINT }}" ]; then
            echo "::error::API_ENDPOINT is empty. Cannot proceed."
            exit 1
          fi
          sed -i "s|%%API_ENDPOINT%%|${{ env.API_ENDPOINT }}|g" frontend/public/script.js
          echo "API Endpoint injected successfully."

      - name: 'Deploy static site to S3'
        run: |
          echo "Deploying to bucket: ${{ env.S3_BUCKET_NAME }}"
          aws s3 sync frontend/public/ s3://${{ env.S3_BUCKET_NAME }}/ --delete